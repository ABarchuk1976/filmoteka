{"mappings":"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","sources":["src/index.js","src/js/open-model.js"],"sourcesContent":["import './js/constants.js';\nimport './js/common.js';\nimport './js/header-main.js';\nimport './js/open-model.js';\nimport './js/modal-film.js';\nimport './js/modal-team.js';\nimport './js/trailer.js';\nimport './js/btn-scroll.js';\nimport './js/spinner.js';\nimport './js/local-storage.js';\nimport './js/local-storage-set.js';\n","import * as storageLocal from './local-storage.js';\nimport ModalFilm from './modal-film';\nimport { handleBackButtonClick, trailerButtonRef,  handleTrailerButtonClick} from './trailer';\n\nimport { sendWatchedToStorage, sendQueueToStorage} from \"./local-storage-set\";\n\nconst refs = {\n  gallery: document.querySelector('.js-gallery'),\n  closeBtn: document.querySelector('[data-modal-close]'),\n  btnWatched: document.querySelector(\".btn_watched\"),\n  btnQueue: document.querySelector(\".btn_queue\"),\n};\n\nconst modalFilm = new ModalFilm();\n\nrefs.gallery.addEventListener('click', onOpenModal);\nrefs.closeBtn.addEventListener('click', onCloseModal);\nwindow.addEventListener('keydown', onCloseModalEsc);  \n\nfunction onOverlayClose(event) {\n  if (!event.target.closest(\".modal\") && event.target.closest('.backdrop')) {\n      onCloseModal();\n  }\n}\ndocument.addEventListener(\"click\", onOverlayClose)\n\nfunction onOpenModal(e) {\n  e.preventDefault();\n  trailerButtonRef.addEventListener('click', handleTrailerButtonClick);\n\n  if (e.target.nodeName !== 'IMG') return;\n\n  const dataCurentFilm = getFilmData(e.target.id);\n\n  modalFilm.modifyDataFilm(dataCurentFilm);\n  modalFilm.open();\n\n///// for local-storage and button /////////\n  refs.btnWatched.addEventListener(\"click\", onWatchedBtnClick)\n  refs.btnQueue.addEventListener(\"click\", onQueueBtnClick)\n\n  localStorage.setItem(\"CurrentFilm\", JSON.stringify(dataCurentFilm))\n  \n  checkWatchedStorage(dataCurentFilm)\n  if (refs.btnWatched.classList.contains(\"watched_remove\")) {\n    refs.btnWatched.textContent = 'REMOVE FROM WATCHED'} \n  else if(refs.btnWatched.classList.contains(\"watched_send\")){\n    refs.btnWatched.textContent = 'ADD TO WATCHED'\n  }\n\n  checkQueueStorage(dataCurentFilm)\n  if (refs.btnQueue.classList.contains(\"queue_remove\")) {\n      refs.btnQueue.textContent = 'REMOVE FROM QUEUE'}\n  else if (refs.btnWatched.classList.contains(\"queue_send\")){\n    refs.btnQueue.textContent = 'ADD TO QUEUE'\n  }\n    \n  function onWatchedBtnClick() {\n    if (refs.btnWatched.classList.contains(\"watched_send\")) {\n      refs.btnWatched.textContent = 'REMOVE FROM WATCHED'\n      refs.btnWatched.classList.replace(\"watched_send\", \"watched_remove\")\n\n      sendWatchedToStorage()\n\n    } else if (refs.btnWatched.classList.contains(\"watched_remove\")) {\n      refs.btnWatched.textContent = 'ADD TO WATCHED'  \n      refs.btnWatched.classList.replace(\"watched_remove\", \"watched_send\")\n\n      removeWatchedFilm(dataCurentFilm)\n    }\n      \n    refs.btnWatched.textContent = 'ADD TO WATCHED' \n    refs.btnWatched.classList.replace(\"watched_remove\", \"watched_send\")  \n  }\n \n  function removeWatchedFilm(currentFilm) {\n      try {\n        const getWatchedFromStorage = localStorage.getItem(\"WatchedMovies\")\n        const getWatchedArray = JSON.parse(getWatchedFromStorage)\n\n        const watchedFilmIndex = getWatchedArray.findIndex(value => value.id === currentFilm.id);\n        getWatchedArray.splice(watchedFilmIndex, 1)\n        localStorage.setItem(\"WatchedMovies\", JSON.stringify(getWatchedArray))\n      } catch (error) {\n      // console.error('Get state error: ', error.message);\n    }\n}\n  \n  function onQueueBtnClick() {\n    if (refs.btnQueue.classList.contains(\"queue_send\")) {\n      refs.btnQueue.textContent = 'REMOVE FROM QUEUE'\n      refs.btnQueue.classList.replace(\"queue_send\", \"queue_remove\")\n\n      sendQueueToStorage()\n    } else if (refs.btnQueue.classList.contains(\"queue_remove\")) {\n      refs.btnQueue.textContent = 'ADD TO QUEUE'  \n      refs.btnQueue.classList.replace(\"queue_remove\", \"queue_send\")\n\n      removeQueueFilm(dataCurentFilm)\n    }\n\n    refs.btnQueue.textContent = 'ADD TO QUEUE'  \n    refs.btnQueue.classList.replace(\"queue_remove\", \"queue_send\")\n  }\n\n  function removeQueueFilm(currentFilm) {\n      try {\n        const getQueueFromStorage = localStorage.getItem(\"QueueMovies\")\n        const getQueueArray = JSON.parse(getQueueFromStorage)\n\n        const queueFilmIndex = getQueueArray.findIndex(value => value.id === currentFilm.id);\n        getQueueArray.splice(queueFilmIndex, 1)\n        localStorage.setItem(\"QueueMovies\", JSON.stringify(getQueueArray))\n\n    } catch (error) {\n      // console.error('Get state error: ', error.message);\n    }\n  }\n///////////////////end of local-storage ///////////\n\n  refs.closeBtn.addEventListener('click', onCloseModal);\n  window.addEventListener('keydown', onCloseModalEsc);\n}\n\nfunction onCloseModal() {\n  const iframeContainer = document.querySelector('.iframe-container');\n  const trailerContainer = document.querySelector('.film__info-wrapper');\n  handleBackButtonClick(iframeContainer, trailerContainer);\n  modalFilm.close();\n  refs.closeBtn.removeEventListener('click', onCloseModal);\n  trailerButtonRef.removeEventListener('click', handleTrailerButtonClick);\n  window.removeEventListener('keydown', onCloseModalEsc);\n\n\n  //////////Примусове перезавантаження сторінки /////////////////////////////////\n  // window.location.reload()\n}\n\nfunction onCloseModalEsc(e) {\n  if (e.code === 'Escape') {\n    modalFilm.close();\n\n    refs.closeBtn.removeEventListener('click', onCloseModal);\n    window.removeEventListener('keydown', onCloseModalEsc);\n  }\n}\n\nfunction getFilmData(filmId) {\n  const filmList = storageLocal.load('film-current-page');\n  return filmList.find(film => film.id === Number(filmId));\n}\n\n////////////// checks for button /////////////////\n\nfunction checkWatchedStorage(currentFilm) {\n  try {\n    const getWatchedFromStorage = localStorage.getItem(\"WatchedMovies\")\n    const getWatchedArray = JSON.parse(getWatchedFromStorage)\n    const checkWatchedStorage = getWatchedArray.find(option => option.id === currentFilm.id);\n        if (checkWatchedStorage) {\n          refs.btnWatched.classList.replace(\"watched_send\", \"watched_remove\")\n          refs.btnWatched.textContent = 'REMOVE FROM WATCHED'\n        } else {\n          refs.btnWatched.classList.replace(\"watched_remove\", \"watched_send\")\n          refs.btnWatched.textContent = 'ADD TO WATCHED'\n        }\n    } catch (error) {\n      // console.error('Get state error: ', error.message);\n      refs.btnWatched.classList.replace(\"watched_remove\", \"watched_send\")\n    }\n}\n\nfunction checkQueueStorage(currentFilm) {\n  try {\n    const getQueueFromStorage = localStorage.getItem(\"QueueMovies\")\n    const getQueueArray = JSON.parse(getQueueFromStorage)\n    const checkQueueStorage = getQueueArray.find(option => option.id === currentFilm.id);\n        if (checkQueueStorage) {\n          refs.btnQueue.classList.replace(\"queue_send\", \"queue_remove\")\n          refs.btnQueue.textContent = 'REMOVE FROM QUEUE'\n        } else {\n          refs.btnQueue.classList.replace(\"queue_remove\", \"queue_send\")\n          refs.btnQueue.textContent = 'ADD TO QUEUE'\n        }\n    } catch (error) {\n      // console.error('Get state error: ', error.message);\n      refs.btnQueue.classList.replace(\"queue_remove\", \"queue_send\")\n    }\n}"],"names":["parcelRequire","$4LMMA","$fb09461e5f4fdf78$var$refs","gallery","document","querySelector","closeBtn","btnWatched","btnQueue","$fb09461e5f4fdf78$var$modalFilm","$73ES2","default","$fb09461e5f4fdf78$var$onCloseModal","iframeContainer","trailerContainer","$cDXQO","handleBackButtonClick","close","removeEventListener","trailerButtonRef","handleTrailerButtonClick","window","$fb09461e5f4fdf78$var$onCloseModalEsc","e","code","addEventListener","preventDefault","target","nodeName","dataCurentFilm","filmId","id","load","find","film","Number","modifyDataFilm","open","classList","contains","textContent","replace","$iDjs5","sendWatchedToStorage","currentFilm","getWatchedFromStorage","localStorage","getItem","getWatchedArray","JSON","parse","watchedFilmIndex","findIndex","value","splice","setItem","stringify","error","removeWatchedFilm","sendQueueToStorage","getQueueFromStorage","getQueueArray","queueFilmIndex","removeQueueFilm","option","$fb09461e5f4fdf78$var$checkWatchedStorage","$fb09461e5f4fdf78$var$checkQueueStorage","event","closest"],"version":3,"file":"index.18536312.js.map"}